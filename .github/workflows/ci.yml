name: CI Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Create minimal config files
        run: |
          mkdir -p src/main/resources
          # Fichier de config minimal pour la compilation
          cat > src/main/resources/application.properties << 'EOF'
          spring.application.name=mesi_backend_rpg
          server.port=8080
          spring.jpa.hibernate.ddl-auto=validate
          spring.datasource.url=jdbc:h2:mem:testdb
          spring.datasource.driver-class-name=org.h2.Driver
          spring.datasource.username=sa
          spring.datasource.password=
          spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
          firebase.web.api.key=dummy_key
          email=test@example.com
          mdp=test_password
          anthropic.model=claude-3-7-sonnet-20250219
          anthropic.api.key=dummy_key
          app.file.storage.enabled=false
          EOF
          
          # Fichier Firebase minimal
          cat > src/main/resources/firebase-service-account.json << 'EOF'
          {
            "type": "service_account",
            "project_id": "test-project",
            "private_key_id": "test",
            "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7VJTUt9Us8cKB\ntest_key_data_here\n-----END PRIVATE KEY-----",
            "client_email": "test@test.iam.gserviceaccount.com",
            "client_id": "123456789"
          }
          EOF

      - name: Compile application
        run: ./mvnw clean compile -B

      - name: Package application
        run: ./mvnw package -DskipTests -B

      - name: Build Docker image
        run: docker build -t mesi-backend:latest .

      - name: Verify build artifacts
        run: |
          echo "✅ Compilation successful!"
          echo "📦 JAR file created:"
          ls -la target/*.jar
          echo "🐳 Docker image created:"
          docker images mesi-backend:latest